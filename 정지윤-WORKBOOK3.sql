--1
SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS 주소지
FROM TB_STUDENT
ORDER BY STUDENT_NAME

--2
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY STUDENT_SSN DESC

--3
SELECT STUDENT_NAME "학생 이름", TO_CHAR(ENTRANCE_DATE, 'YYMMDD') 학번, STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT
WHERE (STUDENT_ADDRESS LIKE '경기%' OR STUDENT_ADDRESS LIKE'강원%')
AND ENTRANCE_DATE LIKE '9%'
ORDER BY STUDENT_NAME

--4
SELECT PROFESSOR_NAME , PROFESSOR_SSN 
FROM TB_PROFESSOR
NATURAL JOIN TB_DEPARTMENT
WHERE DEPARTMENT_NAME = '법학과'
ORDER BY PROFESSOR_SSN

--5
SELECT STUDENT_NO, TO_CHAR(POINT, 'FM9.00') 학점
FROM TB_STUDENT
NATURAL JOIN TB_GRADE
WHERE CLASS_NO = 'C3118100'
AND TERM_NO LIKE '200402'
ORDER BY POINT DESC


--6
SELECT STUDENT_NO , STUDENT_NAME , DEPARTMENT_NAME
FROM TB_STUDENT
NATURAL JOIN TB_DEPARTMENT
ORDER BY STUDENT_NAME


--7
SELECT CLASS_NAME , DEPARTMENT_NAME
FROM TB_CLASS
NATURAL JOIN TB_DEPARTMENT


--8
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO);

--9
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR P USING(PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON(P.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE CATEGORY = '인문사회';
-- ORA-00918: column ambiguously defined
--> 컬럼의 정의가 애매모호하다
--> 중복되는 컬럼명을 구분할 수 있도록
--  테이블명.컬럼명 또는 별칭.컬럼명으로 구분


--10
SELECT STUDENT_NO 학번, STUDENT_NAME "학생 이름", ROUND(AVG(POINT), 1) "전체 평점"
FROM TB_STUDENT
LEFT JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
LEFT JOIN TB_GRADE USING(STUDENT_NO)
WHERE DEPARTMENT_NAME LIKE '음악학과'
GROUP BY STUDENT_NO, STUDENT_NAME
ORDER BY 학번




-- 11


-- 12
SELECT STUDENT_NAME, TERM_NO
FROM TB_STUDENT
JOIN TB_CLASS USING(CLASS_NO)
JOIN TB_GRADE USING(STUDENT_NO)

-- 13
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
LEFT JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE CATEGORY = '예체능'
AND PROFESSOR_NO IS NULL;

-- 14


-- 15


-- 16


-- 17


-- 18
SELECT STUDENT_NO, STUDENT_NAME
FROM (
SELECT STUDENT_NO, STUDENT_NAME, AVG(POINT) 평점
FROM TB_GRADE
JOIN TB_STUDENT USING(STUDENT_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '국어국문학과'
GROUP BY STUDENT_NO, STUDENT_NAME
ORDER BY 평점 DESC )
WHERE ROWNUM = 1;


SELECT STUDENT_NO, STUDENT_NAME
FROM (
	SELECT STUDENT_NO, STUDENT_NAME, AVG(POINT) 평점
	FROM TB_GRADE
	JOIN TB_STUDENT USING(STUDENT_NO)
	WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
						   FROM TB_DEPARTMENT
						   WHERE DEPARTMENT_NAME = '국어국문학과')
	GROUP BY STUDENT_NO, STUDENT_NAME
	ORDER BY 평점 DESC )
WHERE ROWNUM = 1;

-- 19
SELECT DEPARTENT_NAME "계열 학과명", ROUND(AVG(POINT),1) 전공평점
FROM TB_DEPARTMENT
JOIN TB_CLASS USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(CLASS_NO)
WHERE CATEGORY = 

-- 20
